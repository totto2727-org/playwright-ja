name: Push amd64 Docker image

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  tag-list:
    name: Get tag list
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - uses: denoland/setup-deno@v1
        with:
          deno-version: "1.44.4"

      - name: List unpushed image tags
        id: tags-list
        run: deno run --allow-env --allow-write --allow-net main.ts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARCHITECTURE: "amd64"

      - run: |
          echo ${{ steps.tags-list.outputs.matrix }}

    outputs:
      matrix: ${{ steps.tags-list.outputs.matrix }}

  push:
    name: Push Docker image to GHCR
    runs-on: ubuntu-latest

    needs:
      - tag-list

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    strategy:
      max-parallel: 10
      fail-fast: false
      matrix: ${{fromJson(needs.tag-list.outputs.matrix)}}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/totto2727-org/playwright-ja
          tags: |
            ${{ matrix.tag }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TAG=${{ matrix.tag }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/totto2727-org/playwright-ja
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
